// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

//=============================================================================
// Plugins
//=============================================================================
plugins {
    id 'java'
    id 'application'
    id "com.google.protobuf" version "0.8.0"
}
apply plugin: 'com.google.protobuf'
apply plugin: 'checkstyle'

//=============================================================================
// Project Level Settings
//=============================================================================
/* Meta Data Info */
def title = 'Apache Wave Server'
def vendor = 'The Apache Software Foundation'
version = "0.5.0"
mainClassName = "org.waveprotocol.box.server.ServerMain"
applicationDefaultJvmArgs = [
        "-Xmx1024M",
        "-Dorg.eclipse.jetty.LEVEL=DEBUG",
        "-Djava.util.logging.config.file=config/wiab-logging.conf",
        "-Djava.security.auth.login.config=config/jaas.config"
]
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava {
    options.incremental = true
}

//=============================================================================
// Source's
//=============================================================================
sourceSets {
    main {
        java {
            srcDirs = [
                    'src/main/java',
                    'generated/main/java',
                    'generated/proto/java'
            ]
            exclude 'org/waveprotocol/**/*'
            exclude 'com/google/wave/api/**/*'
        }
        proto {
            srcDir 'src/main/proto'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

//=============================================================================
// Dependencies
// Note: next to each dependency is a review stamp [last review, next review].
//       If a dependency is past its review date pls create a jira issue.
//       https://issues.apache.org/jira/browse/WAVE
//=============================================================================
repositories {
    mavenCentral()
    maven {
        url 'https://oauth.googlecode.com/svn/code/maven/'
    }
    maven {
        url 'https://maven.atlassian.com/3rdparty/'
    }
}
configurations.compile {
    resolutionStrategy {
        failOnVersionConflict()


        force 'com.google.guava:guava:21.0',
                'com.google.code.gson:gson:2.8.0',
                'commons-collections:commons-collections:3.2.2',
                'commons-lang:commons-lang:2.5',
                'commons-logging:commons-logging:1.1.1',
                'commons-codec:commons-codec:1.10',
                'commons-io:commons-io:2.4'
    }
}
dependencies {
    compile (
            [group: "com.google.code.gson", name: "gson", version: "2.8.0"],                                    // [11/2016, 1/2018]
            [group: "com.google.guava", name: "guava", version: "21.0"],                                        // [11/2016, 1/2018]
            [group: "com.google.protobuf", name: "protobuf-java", version: "3.2.0"],                            // [?, ?]
            [group: "com.google.protobuf", name: "protobuf-java-util", version: "3.2.0"],                       // [?, ?]
            [group: "org.apache.commons", name: "commons-configuration2", version: "2.1.1"],                    // [?, ?]
            [group: "com.google.code.findbugs", name: "jsr305", version: "2.0.1"],                              // [?, ?]
            [group: "com.google.guava", name: "guava", version: "20.0"],                                        // [?, ?]
            [group: "com.google.inject.extensions", name: "guice-assistedinject", version: "4.1.0"],            // [?, ?]
            [group: "com.google.inject.extensions", name: "guice-servlet", version: "4.1.0"],                   // [?, ?]
            [group: "com.google.inject", name: "guice", version:"4.1.0"],					                    // [?, ?]
            [group: "org.bouncycastle", name: "bcprov-jdk16", version: "1.45"],                                 // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-annotations", version: "9.4.5.v20170502"],               // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-client", version: "9.4.5.v20170502"],                    // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-continuation", version: "9.4.5.v20170502"],              // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-http", version: "9.4.5.v20170502"],                      // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-io", version: "9.4.5.v20170502"],                        // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-proxy", version: "9.4.5.v20170502"],                     // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-security", version: "9.4.5.v20170502"],                  // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-server", version: "9.4.5.v20170502"],                    // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-servlet", version: "9.4.5.v20170502"],                   // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-servlets", version: "9.4.5.v20170502"],                  // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-util", version: "9.4.5.v20170502"],                      // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-webapp", version: "9.4.5.v20170502"],                    // [?, ?]
            [group: "org.eclipse.jetty", name: "jetty-xml", version: "9.4.5.v20170502"],                       // [?, ?]
            [group: "org.eclipse.jetty.websocket", name: "websocket-api", version: "9.4.5.v20170502"],         // [?, ?]
            [group: "org.eclipse.jetty.websocket", name: "websocket-client", version: "9.4.5.v20170502"],      // [?, ?]
            [group: "org.eclipse.jetty.websocket", name: "websocket-common", version: "9.4.5.v20170502"],      // [?, ?]
            [group: "org.eclipse.jetty.websocket", name: "websocket-server", version: "9.4.5.v20170502"],      // [?, ?]
            [group: "org.eclipse.jetty.websocket", name: "websocket-servlet", version: "9.4.5.v20170502"],     // [?, ?]
            [group: "org.slf4j", name: "slf4j-api", version: "1.7.25"],                                          // [?, ?]
            [group: "org.slf4j", name: "slf4j-simple", version: "1.7.25"],                                       // [?, ?]
            [group: "javax.inject", name: "javax.inject", version: "1"],                                        // [?, ?]
            [group: "javax.servlet", name: "javax.servlet-api", version: "3.1.0"],                              // [?, ?]
            [group: "javax.jdo", name: "jdo2-api", version: "2.1"],                                             // [?, ?]

    )
    testCompile(
            [group: 'junit', name: 'junit', version: '4.12'],                                                   // [11/2016, 1/2018]
            [group: "org.hamcrest", name: "hamcrest-junit", version: "2.0.0.0"],                                // [11/2016, 1/2018]
            [group: "org.mockito", name: "mockito-core", version: "2.2.21"],                                    // [11/2016, 1/2018]
    )
}
//=============================================================================
// CheckStyle Config
//=============================================================================
checkstyle {
    toolVersion = "7.6.1"
    configFile = file("/google_checks.xml")
}

checkstyleMain.source = "src/main/java/org/apache" // only checks the manually written java

//=============================================================================
// Protobuf Config
//=============================================================================
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.2.0'
    }
}

//=============================================================================
// Tests
//=============================================================================

test {
    include "**/*Test*"
    include "**/*LargeTest*"

    exclude "**/*GwtTest*"
    exclude "**/server/persistence/mongodb/**/*Test*"

    minHeapSize = "512m"
    maxHeapSize = "1024m"

    doFirst {
        println ''
        println '---------------------'
        println ' Running unit tests. '
        println '---------------------'
        println ''
    }
}

//=============================================================================
// Dist's
//=============================================================================

jar {
    baseName = 'wave'
    classifier = ''
    manifest {
        attributes "Specification-Vendor": vendor,
                "Specification-Title": title,
                "Specification-Version": version,
                "Implementation-Vendor": vendor,
                "Implementation-Title": title,
                "Implementation-Version": version,
                "Built-By": "No one in particular",
                "Main-Class": mainClassName
    }
    exclude "org/waveprotocol/**/*"
    exclude "com/google/api/client/**/*"
}
jar.dependsOn compileJava

//=============================================================================
// Binary Distribution
//=============================================================================
tasks.withType(Tar) {
    compression = Compression.BZIP2
}

distributions {
    main {
        contents {
            from('config') {
              into 'config'
            }
            from('war') {
                into 'war'
            }
            from('../THANKS') {
                into ''
            }
            from('../RELEASE-NOTES') {
                into ''
            }
            from('../KEYS') {
                into ''
            }
            from('../DISCLAIMER') {
                into ''
            }
        }
    }
}

// Additional Clean
clean {
    delete "war/WEB-INF"
    delete "war/webclient"
    delete "generated/"
    delete "gwt-unitCache"
}
